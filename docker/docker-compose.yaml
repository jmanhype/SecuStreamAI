# docker/docker-compose.yaml

version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - kafka
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - PROJECT_NAME=${PROJECT_NAME}
      - PROJECT_VERSION=${PROJECT_VERSION}
      - API_V1_STR=${API_V1_STR}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - PROMETHEUS_PORT=${PROMETHEUS_PORT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ../src:/app/src
    networks:
      - secustreamai-network

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - secustreamai-network

  redis:
    image: redis:6
    networks:
      - secustreamai-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - secustreamai-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - secustreamai-network

networks:
  secustreamai-network:
    driver: bridge

volumes:
  postgres_data: